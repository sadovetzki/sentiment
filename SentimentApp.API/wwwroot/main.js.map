{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_models/lex.ts","webpack:///./src/app/_services/calc.service.ts","webpack:///./src/app/_services/lex.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/calculate/calculate.component.css","webpack:///./src/app/calculate/calculate.component.html","webpack:///./src/app/calculate/calculate.component.ts","webpack:///./src/app/lex/lex.component.css","webpack:///./src/app/lex/lex.component.html","webpack:///./src/app/lex/lex.component.ts","webpack:///./src/app/lexicon/lexicon.component.css","webpack:///./src/app/lexicon/lexicon.component.html","webpack:///./src/app/lexicon/lexicon.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class Lex {\r\n  id: number;\r\n  word: string;\r\n  grade: number;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LexCalculation } from '../_models/lexCalculation';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalcService {\n  baseUrl = 'http://localhost:5000/api/calc';\n\n  constructor(private http: HttpClient) {}\n\n  getSentimentGrade(text: string): Observable<LexCalculation> {\n    return this.http.post<LexCalculation>(this.baseUrl, { text });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Lex } from '../_models/lex';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LexService {\n  baseUrl = 'http://localhost:5000/api/lex/';\n\n  constructor(private http: HttpClient) {}\n\n  getLexicons(filterParams?): Observable<Lex[]> {\n    let params = new HttpParams();\n\n    if (filterParams != null) {\n      params = params.append('connotation', filterParams.connotation);\n    }\n\n    return this.http.get<Lex[]>(this.baseUrl, { params });\n  }\n\n  deleteLex(word: string): Observable<Lex> {\n    return this.http.delete<Lex>(this.baseUrl + word, {});\n  }\n\n  addLex(lex: Lex): Observable<Lex> {\n    return this.http.post<Lex>(this.baseUrl, lex);\n  }\n\n  updateLex(lex: Lex): Observable<Lex> {\n    return this.http.put<Lex>(this.baseUrl + lex.id, lex);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<tabset>\\n  <tab heading=\\\"Lexicon\\\"> <app-lexicon></app-lexicon> </tab>\\n  <tab heading=\\\"Calculate\\\"> <app-calculate></app-calculate> </tab>\\n</tabset>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Sentiment';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { LexComponent } from './lex/lex.component';\nimport { LexService } from './_services/lex.service';\nimport { CalcService } from './_services/calc.service';\nimport { CalculateComponent } from './calculate/calculate.component';\nimport { LexiconComponent } from './lexicon/lexicon.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ButtonsModule, TabsModule } from 'ngx-bootstrap';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LexComponent,\n    CalculateComponent,\n    LexiconComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    TabsModule.forRoot(),\n    ButtonsModule.forRoot()\n  ],\n  providers: [LexService, CalcService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \".container {\\r\\n  margin: 30px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FsY3VsYXRlL2NhbGN1bGF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtDQUNkIiwiZmlsZSI6InNyYy9hcHAvY2FsY3VsYXRlL2NhbGN1bGF0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiAgbWFyZ2luOiAzMHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <form (ngSubmit)=\\\"parse()\\\">\\n    <div class=\\\"form-group\\\">\\n      <textarea\\n        class=\\\"form-control\\\"\\n        rows=\\\"5\\\"\\n        placeholder=\\\"Text to parse...\\\"\\n        name=\\\"textToParse\\\"\\n        [(ngModel)]=\\\"lexCalculation.text\\\"\\n      ></textarea>\\n      <input\\n        class=\\\"mt-1\\\"\\n        type=\\\"file\\\"\\n        accept=\\\".txt\\\"\\n        (change)=\\\"fileUpload($event.target.files)\\\"\\n      />\\n      <div class=\\\"float-right mt-1\\\">\\n        <button class=\\\"btn btn-info\\\" type=\\\"submit\\\">Calculate</button>\\n      </div>\\n    </div>\\n  </form>\\n  <form class=\\\"form-inline\\\">\\n    <br />\\n    <br />\\n    <h6>Sentiment grade:</h6>\\n    <h6 class=\\\"ml-1\\\">{{ lexCalculation.averageGrade | number }}</h6>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CalcService } from '../_services/calc.service';\nimport { LexCalculation } from '../_models/lexCalculation';\n\n@Component({\n  selector: 'app-calculate',\n  templateUrl: './calculate.component.html',\n  styleUrls: ['./calculate.component.css']\n})\nexport class CalculateComponent implements OnInit {\n  fileText: string;\n  lexCalculation: LexCalculation;\n\n  constructor(private calcService: CalcService) {\n    this.lexCalculation = {\n      text: '',\n      averageGrade: 0,\n      foundLexes: []\n    };\n  }\n\n  ngOnInit() {}\n\n  fileUpload(files: FileList) {\n    const reader = new FileReader();\n    if (files[0].type === 'text/plain') {\n      reader.readAsText(files[0]);\n      reader.onload = () => {\n        this.lexCalculation.text = reader.result.toString();\n        if (this.lexCalculation.text) {\n          this.parse();\n        }\n      };\n    }\n  }\n\n  parse() {\n    this.calcService.getSentimentGrade(this.lexCalculation.text).subscribe(\n      (response: LexCalculation) => {\n        console.log(response);\n        this.lexCalculation = response;\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n}\n","module.exports = \"button {\\r\\n  background-color: #eee;\\r\\n  border: none;\\r\\n  padding: 5px 10px;\\r\\n  margin: 3px;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n  cursor: hand;\\r\\n  font-family: Arial;\\r\\n}\\r\\n\\r\\nbutton:hover {\\r\\n  background-color: #cfd8dc;\\r\\n}\\r\\n\\r\\n.badge {\\r\\n  padding: 5px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGV4L2xleC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsdUJBQXVCO0VBQ3ZCLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixnQkFBZ0I7RUFDaEIsYUFBYTtFQUNiLG1CQUFtQjtDQUNwQjs7QUFFRDtFQUNFLDBCQUEwQjtDQUMzQjs7QUFFRDtFQUNFLGFBQWE7Q0FDZCIsImZpbGUiOiJzcmMvYXBwL2xleC9sZXguY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbiB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgcGFkZGluZzogNXB4IDEwcHg7XHJcbiAgbWFyZ2luOiAzcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBjdXJzb3I6IGhhbmQ7XHJcbiAgZm9udC1mYW1pbHk6IEFyaWFsO1xyXG59XHJcblxyXG5idXR0b246aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNjZmQ4ZGM7XHJcbn1cclxuXHJcbi5iYWRnZSB7XHJcbiAgcGFkZGluZzogNXB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<h4>\\n  <span\\n    class=\\\"badge\\\"\\n    [ngClass]=\\\"{\\n      'badge-info': lex.grade == 0,\\n      'badge-success': lex.grade > 0,\\n      'badge-danger': lex.grade < 0\\n    }\\\"\\n    [ngStyle]=\\\"{ opacity: opacity() }\\\"\\n    >{{ lex.word }} {{ lex.grade }}\\n    <button class=\\\"delete\\\" (click)=\\\"delete()\\\">\\n      x\\n    </button>\\n    <button class=\\\"edit\\\" (click)=\\\"setLexForEdit()\\\">\\n      edit\\n    </button>\\n  </span>\\n</h4>\\n<form\\n  class=\\\"form-inline ml-4 mt-1\\\"\\n  [formGroup]=\\\"editLexiconForm\\\"\\n  *ngIf=\\\"lexForEdit\\\"\\n  (ngSubmit)=\\\"applyEdit()\\\"\\n>\\n  <label\\n    >Edit lex:\\n    <div class=\\\"form-group\\\">\\n      <input\\n        [ngClass]=\\\"{\\n          'is-invalid':\\n            editLexiconForm.get('word').errors &&\\n            editLexiconForm.get('word').touched\\n        }\\\"\\n        class=\\\"form-control ml-2\\\"\\n        formControlName=\\\"word\\\"\\n      />\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <input\\n        [ngClass]=\\\"{\\n          'is-invalid':\\n            editLexiconForm.get('grade').errors &&\\n            editLexiconForm.get('grade').touched\\n        }\\\"\\n        class=\\\"form-control ml-1\\\"\\n        type=\\\"number\\\"\\n        min=\\\"-1.0\\\"\\n        max=\\\"1.0\\\"\\n        step=\\\"0.1\\\"\\n        name=\\\"grade\\\"\\n        formControlName=\\\"grade\\\"\\n      />\\n    </div>\\n  </label>\\n  <button type=\\\"submit\\\" [disabled]=\\\"!editLexiconForm.valid\\\">Apply</button>\\n</form>\\n\"","import {\n  Component,\n  OnInit,\n  ViewChild,\n  Input,\n  EventEmitter,\n  Output\n} from '@angular/core';\nimport { LexService } from '../_services/lex.service';\nimport { Lex } from '../_models/lex';\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-lex',\n  templateUrl: './lex.component.html',\n  styleUrls: ['./lex.component.css']\n})\nexport class LexComponent implements OnInit {\n  // @ViewChild('editForm') editForm: NgForm;\n  @Input() lex: Lex;\n  @Output() removeLexEvent = new EventEmitter<Lex>();\n  lexForEdit: Lex;\n  editLexiconForm: FormGroup;\n\n  constructor(private lexService: LexService) {}\n\n  ngOnInit() {}\n\n  initForm() {\n    const minSentimentGrade = -1;\n    const maxSentimentGrade = 1;\n    this.editLexiconForm = new FormGroup({\n      word: new FormControl(this.lexForEdit.word, Validators.required),\n      grade: new FormControl(this.lexForEdit.grade, [\n        Validators.required,\n        Validators.min(minSentimentGrade),\n        Validators.max(maxSentimentGrade)\n      ])\n    });\n  }\n\n  opacity() {\n    if (this.lex.grade === 0) {\n      return 1;\n    }\n    return Math.pow(Math.abs(this.lex.grade), 0.4);\n  }\n\n  delete() {\n    this.lexService.deleteLex(this.lex.word).subscribe(\n      response => {\n        this.removeLexEvent.emit(response);\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  setLexForEdit() {\n    if (this.lexForEdit) {\n      this.lexForEdit = null;\n    } else {\n      this.lexForEdit = {\n        id: this.lex.id,\n        word: this.lex.word,\n        grade: this.lex.grade\n      };\n      this.initForm();\n    }\n  }\n\n  applyEdit() {\n    if (this.editLexiconForm.valid) {\n      this.lexForEdit = Object.assign({}, this.editLexiconForm.value);\n      this.lexForEdit.id = this.lex.id;\n      this.lexService.updateLex(this.lexForEdit).subscribe(\n        lex => {\n          if (lex) {\n            this.lexForEdit = null;\n            this.lex = lex;\n          }\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    }\n  }\n}\n","module.exports = \"#addWord,\\r\\n#filterForm,\\r\\n#lexes {\\r\\n  margin: 30px;\\r\\n}\\r\\n\\r\\nul {\\r\\n  list-style-type: none;\\r\\n}\\r\\n\\r\\nli {\\r\\n  margin: 5px;\\r\\n}\\r\\n\\r\\n.classic {\\r\\n  background-color: #eee;\\r\\n  border: none;\\r\\n  padding: 5px 10px;\\r\\n  margin: 3px;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n  cursor: hand;\\r\\n  font-family: Arial;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGV4aWNvbi9sZXhpY29uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztFQUdFLGFBQWE7Q0FDZDs7QUFFRDtFQUNFLHNCQUFzQjtDQUN2Qjs7QUFFRDtFQUNFLFlBQVk7Q0FDYjs7QUFFRDtFQUNFLHVCQUF1QjtFQUN2QixhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixtQkFBbUI7RUFDbkIsZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYixtQkFBbUI7Q0FDcEIiLCJmaWxlIjoic3JjL2FwcC9sZXhpY29uL2xleGljb24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNhZGRXb3JkLFxyXG4jZmlsdGVyRm9ybSxcclxuI2xleGVzIHtcclxuICBtYXJnaW46IDMwcHg7XHJcbn1cclxuXHJcbnVsIHtcclxuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbn1cclxuXHJcbmxpIHtcclxuICBtYXJnaW46IDVweDtcclxufVxyXG5cclxuLmNsYXNzaWMge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIHBhZGRpbmc6IDVweCAxMHB4O1xyXG4gIG1hcmdpbjogM3B4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgY3Vyc29yOiBoYW5kO1xyXG4gIGZvbnQtZmFtaWx5OiBBcmlhbDtcclxufVxyXG4iXX0= */\"","module.exports = \"<form\\n  id=\\\"addWord\\\"\\n  class=\\\"form-inline\\\"\\n  [formGroup]=\\\"newLexiconForm\\\"\\n  (ngSubmit)=\\\"addLex()\\\"\\n>\\n  <label\\n    >New lex:\\n    <div class=\\\"form-group\\\">\\n      <input\\n        [ngClass]=\\\"{\\n          'is-invalid':\\n            newLexiconForm.get('word').errors &&\\n            newLexiconForm.get('word').touched\\n        }\\\"\\n        class=\\\"form-control ml-2\\\"\\n        formControlName=\\\"word\\\"\\n        placeholder=\\\"new word\\\"\\n      />\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <input\\n        [ngClass]=\\\"{\\n          'is-invalid':\\n            newLexiconForm.get('grade').errors &&\\n            newLexiconForm.get('grade').touched\\n        }\\\"\\n        class=\\\"form-control ml-1\\\"\\n        formControlName=\\\"grade\\\"\\n        type=\\\"number\\\"\\n        min=\\\"-1.0\\\"\\n        max=\\\"1.0\\\"\\n        step=\\\"0.1\\\"\\n      />\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <button class=\\\"classic\\\" type=\\\"submit\\\" [disabled]=\\\"!newLexiconForm.valid\\\">\\n        Add\\n      </button>\\n    </div></label\\n  >\\n</form>\\n<form id=\\\"filterForm\\\">\\n  <label>Apply connotation filter:</label>\\n  <div class=\\\"btn-group ml-2\\\">\\n    <button\\n      type=\\\"button\\\"\\n      name=\\\"connotation\\\"\\n      class=\\\"btn btn-outline-primary btn-sm \\\"\\n      [(ngModel)]=\\\"filterParams.connotation\\\"\\n      btnRadio=\\\"negative\\\"\\n      (click)=\\\"getLexicons()\\\"\\n    >\\n      Negative\\n    </button>\\n    <button\\n      type=\\\"button\\\"\\n      name=\\\"connotation\\\"\\n      class=\\\"btn btn-outline-primary btn-sm\\\"\\n      btnRadio=\\\"positive\\\"\\n      [(ngModel)]=\\\"filterParams.connotation\\\"\\n      (click)=\\\"getLexicons()\\\"\\n    >\\n      Positive\\n    </button>\\n    <button\\n      type=\\\"button\\\"\\n      name=\\\"connotation\\\"\\n      class=\\\"btn btn-outline-primary btn-sm\\\"\\n      btnRadio=\\\"noFilter\\\"\\n      [(ngModel)]=\\\"filterParams.connotation\\\"\\n      (click)=\\\"getLexicons()\\\"\\n    >\\n      No filter\\n    </button>\\n  </div>\\n</form>\\n<div id=\\\"lexes\\\">\\n  <label>Lexes:</label>\\n  <ul>\\n    <li *ngFor=\\\"let lex of lexicons\\\">\\n      <app-lex [lex]=\\\"lex\\\" (removeLexEvent)=\\\"updateLexList($event)\\\"></app-lex>\\n    </li>\\n  </ul>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LexService } from '../_services/lex.service';\nimport { Lex } from '../_models/lex';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-lexicon',\n  templateUrl: './lexicon.component.html',\n  styleUrls: ['./lexicon.component.css']\n})\nexport class LexiconComponent implements OnInit {\n  lexicons: Lex[];\n  lex: Lex;\n  filterParams: any = {};\n  newLexiconForm: FormGroup;\n\n  constructor(private lexService: LexService) {}\n\n  ngOnInit() {\n    this.initForm();\n    this.resetFilter();\n  }\n\n  initForm() {\n    const defaultSentimentGrade = 0;\n    const defaultSentimentWord = '';\n    const minSentimentGrade = -1;\n    const maxSentimentGrade = 1;\n    this.newLexiconForm = new FormGroup({\n      word: new FormControl(defaultSentimentWord, Validators.required),\n      grade: new FormControl(defaultSentimentGrade, [\n        Validators.required,\n        Validators.min(minSentimentGrade),\n        Validators.max(maxSentimentGrade)\n      ])\n    });\n  }\n\n  resetFilter() {\n    this.filterParams.connotation = '';\n    this.getLexicons();\n  }\n\n  getLexicons() {\n    this.lexService.getLexicons(this.filterParams).subscribe(\n      (response: Lex[]) => {\n        this.lexicons = response;\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  addLex() {\n    if (this.newLexiconForm.valid) {\n      this.lex = Object.assign({}, this.newLexiconForm.value);\n      this.lexService.addLex(this.lex).subscribe(\n        (lex: Lex) => {\n          this.lexicons.push(lex);\n          this.newLexiconForm.reset();\n          this.initForm();\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    }\n  }\n\n  updateLexList(lex: Lex) {\n    this.lexicons.splice(this.lexicons.findIndex(l => l.id === lex.id), 1);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}